package ThinkInJava;

/**
 *接口
 */
public class Interfaces {
    /**
     * 抽象类
     * 1：抽象类的对象没有任何意义，是为所有导出类创建一个通用接口
     * 2：抽象方法，仅有声明而没有方法体 abstract void f()
     * 3：包含抽象方法的类叫做抽象类，类必须限定为抽象类
     * 4：想创建抽象类的对象，必须实现抽象类的所有抽象方法
     */

    /**
     * 接口
     * 1：interface关键字产生一个完全抽象的类，没有提供任何具体实现
     * 2：接口中实现的方法的事public
     * 3：定义接口后，可以通过implements继承
     */

    /**
     * 多重继承
     * 1：只能继承一个基类，但是可以继承多个接口
     * 2：继承多个接口可能会有重载、覆盖等，应尽量避免
     */

    /**
     * 适配接口
     * 1：接口最大的特点是允许一个接口具有多个不同的具体实现
     */

    /**
     * 接口中的域
     * 1：接口中的域默认为static、final，一般用来定义常量
     */

}
