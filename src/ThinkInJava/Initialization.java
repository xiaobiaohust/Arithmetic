package ThinkInJava;


/**
 * 初始化
 */
public class Initialization {

    /**
     * 构造器
     */


    /**
     * 重载
     */

    /**
     * 默认构造器
     */

    /**
     * this：this表示对“调用方法的那个对象”的引用
     * 1：只有当需要明确指出当前对象的引用时，才需要使用this关键字
     *:2：this关键字对于将当前对象传递给其他方法也很有用
     * 3：在构造器中调用构造器。this加上参数列表，将调用符合此参数的构造器
     */


    /**
     * static
     * 1：static方法就是没有this的方法，static方法不能调用非静态方法
     * 2：可以在没有创建任何对象的前提下，通过类本身来调用static方法，这是static方法的主要用途
     * 3：static方法不是面向对象的，不存在this，而且具有全局函数的语义
     *
     */


    /**
     * 垃圾回收：回收程序不再使用的内存
     * finalize：是因为分配内存使用了“本地方法”，也就是在java中调用了非java代码，比如c/C++,
     *
     * @param
     */


    /**
     * 成员初始化
     * 1：java尽力保证所有变量在使用前都能得到恰当的初始化
     * 2：类的数据成员是基本类型的时候，会有一个默认初始值，其他情况编译器不会提供默认值
     * 3：指定初始化，可以在定义类成员变量的地方直接赋值，这样会导致每个对象都具有相同的初始值
     */

    /**
     * 构造器初始化
     * 1：构造器初始化之前，会进行自动初始化
     * 2：类的内部，变量初始化顺序取决于变量定义的先手顺序，变量总是在任何方法调用之前得到初始化
     * 3：静态数据的初始化，static关键字不能应用于局部变量，初始化和普通变量类似，一般不会再构造器中初始化
     */

    /**
     * s数组初始化
     * 1：数组创建和初始化， int[] arr = {1,2,3};
     * 2：数组有一个成员length，不能对它进行修改
     * 3：数组元素个数可以是变量，用new创建，和C++不一样
     */

    /**
     * 枚举
     *
     */




    public static void main(Strings[] args){
        int[] arr = {1,2,3};

    }
}
